<?php

namespace Tests\Unit\Controllers;

use App\Http\Controllers\InventoryController;
use App\Inventory;
use Illuminate\Http\Request;
use Mockery;

class InventoryControllerTest extends \Tests\TestCase
{
    protected $inventoryController;
    protected $request;
    protected $inventory;

    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->inventoryController = Mockery::mock(InventoryController::class)->makePartial();
        $this->request = Mockery::mock(Request::class)->makePartial();
        $this->inventory = Mockery::mock(Inventory::class)->makePartial();
    }

    public function makePropertyAccessible(&$object, $property, $value, $class)
    {
        $reflection = new \ReflectionClass($class);
        $property = $reflection->getProperty($property);
        $property->setAccessible(true);
        $property->setValue($object, $value);
    }

    public function testIfCreateIsWorkingWhenDetailsAreCorrect()
    {
        $this->request->shouldReceive('all')->andReturn(['name' => 'desk']);
        $this->inventory->shouldReceive('create')->andReturn(true);g
        $this->makePropertyAccessible($this->inventoryController,'inventory',$this->inventory,InventoryController::class);
        $this->makePropertyAccessible($this->inventoryController,'request',$this->request,InventoryController::class);
        $reponse = json_decode($this->inventoryController->create()->getContent(),true);
        $this->assertSame($reponse,['status' => 'success']);
    }


    public function testIfCreateIsWorkingWhenDetailsAreNotCorrect()
    {
        $this->request->shouldReceive('all')->andReturn();
        $this->inventory->shouldReceive('create')->andReturn(true);
        $this->makePropertyAccessible($this->inventoryController,'inventory',$this->inventory,InventoryController::class);
        $this->makePropertyAccessible($this->inventoryController,'request',$this->request,InventoryController::class);
        $reponse = json_decode($this->inventoryController->create()->getContent(),true);
        $this->assertSame($reponse,['status' => 'error']);
    }

}